const express = require("express"); const mongoose = require("mongoose"); const cors = require("cors"); const KaspaDEX = require("./kaspa_dex"); const app = express(); app.use(cors()); app.use(express.json()); const dex = new KaspaDEX(); mongoose.connect("mongodb://localhost:27017/kaspa_dex", { useNewUrlParser: true, useUnifiedTopology: true }).then(() => console.log("MongoDB connected")).catch(err => console.error("MongoDB connection error:", err)); app.get("/", (req, res) => { res.send("Welcome to Kaspa DEX API"); }); app.post("/swap/kas-to-kdex", (req, res) => { const { amount } = req.body; const kdexOutput = dex.swapKasToKdex(amount); res.json({ kdexOutput }); }); app.post("/swap/kdex-to-kas", (req, res) => { const { amount } = req.body; const kasOutput = dex.swapKdexToKas(amount); res.json({ kasOutput }); }); app.post("/liquidity/add", (req, res) => { const { kasAmount, kdexAmount } = req.body; const lpTokens = dex.addLiquidity(kasAmount, kdexAmount); res.json({ lpTokens }); }); const PORT = process.env.PORT || 3000; app.listen(PORT, () => { console.log(`Server running on port ${PORT}`); console.log("Server is running..."); });

console.log("Server started successfully");